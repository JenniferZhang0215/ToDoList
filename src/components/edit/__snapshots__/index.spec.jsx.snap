// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Edit /> should render default snapshot: default 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Edit
    defaultValue="fake default value"
    onCancel={[MockFunction]}
    onSave={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <input
          defaultValue="fake default value"
          onChange={[Function]}
        />,
        <button
          className="btn-sm m-1"
          onClick={[MockFunction]}
        >
          Cancel
        </button>,
        <button
          className="btn-success btn-sm m-1"
          onClick={[Function]}
        >
          Save
        </button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "edit-input",
        "nodeType": "host",
        "props": Object {
          "defaultValue": "fake default value",
          "onChange": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": "cancel-btn",
        "nodeType": "host",
        "props": Object {
          "children": "Cancel",
          "className": "btn-sm m-1",
          "onClick": [MockFunction],
        },
        "ref": null,
        "rendered": "Cancel",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": "save-btn",
        "nodeType": "host",
        "props": Object {
          "children": "Save",
          "className": "btn-success btn-sm m-1",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Save",
        "type": "button",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <input
            defaultValue="fake default value"
            onChange={[Function]}
          />,
          <button
            className="btn-sm m-1"
            onClick={[MockFunction]}
          >
            Cancel
          </button>,
          <button
            className="btn-success btn-sm m-1"
            onClick={[Function]}
          >
            Save
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "edit-input",
          "nodeType": "host",
          "props": Object {
            "defaultValue": "fake default value",
            "onChange": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": "cancel-btn",
          "nodeType": "host",
          "props": Object {
            "children": "Cancel",
            "className": "btn-sm m-1",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": "Cancel",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": "save-btn",
          "nodeType": "host",
          "props": Object {
            "children": "Save",
            "className": "btn-success btn-sm m-1",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Save",
          "type": "button",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
